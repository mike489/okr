const Backend = {
  api: import.meta.env.VITE_PMS_URL,
  auth: import.meta.env.VITE_AUTH_URL,
  login: 'login',
  loginWithUsername: 'login-with-username',
  logout: 'logout',
  users: 'users',
  userStatus: 'user-active-inactive',
  refreshToken: 'refresh',
  resetPassword: 'reset-password',
  setPassword: 'create-password',
  verifyOtp: 'verify-otp',
  myProfile: 'my-profile',
  myUnit: 'my-unit',
  changePassword: 'change-password',
  changeUserPassword: 'change-user-password',
  updateProfileImage: 'update-profile-image',
  removeProfileImage: 'remove-profile-image',
  roles: 'roles',
  units: 'units',
  allUnits: 'all-units',
  unitByTypes: 'unit-by-type/',
  types: 'unit-types',
  employees: 'employees',
  employeeDashboard: 'get-employee-home-dashboard',
  employeeExcel: 'employees/upload',
  unitexcel: 'units/upload',
  kpi: 'kpis',
  getStats: 'get-counts',
  preSetups: 'kpi-pre-setups',
  fiscalYear: 'get-fiscal-year',
  exportEmployees: 'export-employees',

  periods: 'periods',
  frequencies: 'frequencies',
  planningPeriods: 'get-planing-period',
  planningFrequiencies: 'get-planing-frequencies',
  PeriodDefinition: 'create-frequency-definition-period',
  updatePeriod: 'update-period/',
  periodTimeline: 'period-timeline',
  changeStatus: 'change-period-status/',
  orgPlan: 'main-kpi-tracking',
  unitsPlan: 'unit-kpi-tracking',
  planStatus: 'change-plan-status',
  managerAction: 'manager-action',
  orgPlanUpdate: 'update-plan/',
  getObjectives: 'get-objectives',
  getObjectiveByPerspectives: 'get-objectives-by-perspective/',
  showPlan: 'show-plan',
  verifyKpiDistribution: 'verify-kpi-plan-distribution/',
  deletePlan: 'delete-plan',
  getMyPlans: 'get-my-plans',
  // getMyPlans: 'get-my-kpi-trackings',
  planInitiative: 'update-initiative/',
  distributeTarget: 'distribute-kpi-tracking',
  childUnits: 'get-my-child-units',
  childTarget: 'get-my-child-targets/',
  getChildUnits: 'get-child-departments',
  getChildEmployees: 'get-child-employees',
  getActiveChildEmployees: 'get-active-child-employees',
  showTarget: 'show-target/',
  getApprovalTasks: 'get-approval-tasks',
  getPendingWeeklyTask: 'get-employee-pending-tasks',
  getApprovalTasksDetail: 'get-approval-task-detail/',
  getApprovalTaskRemarks: 'get-remarks-by-workflow/',
  getPlanConversations: 'get-unit-remarks',
  commentOnApprovalTask: 'create-workflow-comment/',
  getDepartments: 'get-departments',
  getActiveDepartments: 'get-active-departments',
  getEmployees: 'get-employees',
  getActiveEmployees: 'get-active-employees',
  getManagers: 'get-managers',
  getManagerUnits: 'units-i-manage',
  setActiveUnit: 'active-unit/',
  getUnitTarget: 'get-tasks-by-unit/',
  getEmployeeTarget: 'get-tasks-by-employee/',
  // getEmployeePlan: 'get-employee-plan/',
  getEmployeePlan: 'get-employee-plans/',
  submitEmployeePlan: 'verify-employee-plan/',
  employeeProfile: 'employee-profile/',
  employeePerformance: 'employee-performance/',
  employeeTasks: 'employee-tasks',
  employeeTaskStatus: 'update-employee-task-status/',
  employeeTaskRemark: 'create-task-remark/',
  employeesTaskGraph: 'get-employee-task-graph',
  employeeSubTasks: 'employee-sub-tasks/',
  employeeSubTaskStatus: 'update-employee-sub-task-status/',
  employeeTaskReport: 'get-employee-task-count',
  employeeProfileTask: 'get-employee-task-count/',
  leaderBoard: 'employee-task-performance-leader-board',
  employeeLeaderboard: 'employee-performance-leaderboard',
  unitLeaderboard: 'unit-performance-leaderboard',
  notEngagedUnits: 'not-engaged-units',
  notEngagedEmployees: 'not-engaged-employees',
  myTaskGraph: 'my-task-graph',
  employeeEligiblity: 'employee-eligible/',
  getEmployeeTask: 'get-employee-tasks/',
  myTeams: 'my-teams',
  weeklyTaskApproval: 'approve-employee-task/',
  evaluate: 'evaluate',
  sendEvaluateForApproval: 'send-evaluate-for-approval',

  monitor: 'monitor',
  monitorAll: 'monitor-all',
  getMonitoringPeriod: 'get-monitoring-period',
  setMonitoringPeriod: 'set-monitoring-period',
  coaching: 'coaching',
  myCoaching: 'my-coaching',
  changeCoachingStatus: 'change-coaching-status',
  endOfDayReports: 'end-of-day-reports',
  getEodByEmployee: 'get-eod-by-employee/',

  unitPerformance: 'unit-performance/',
  myPerformance: 'my-performance',
  perKPIPerformance: 'my-performance-per-kpi',
  employeePerKpiPerformance: 'employee-performance-per-kpi/',
  unitPerKPIPerformance: 'unit-performance-per-kpi/',
  myUnitPerformance: 'my-unit-performance',
  KPIPerformance: 'kpi-performance/employee/',

  myMonthlyTrends: 'my-monthly-performance-trend',
  myUnitMonthlyTrends: 'my-unit-monthly-performance-trend',
  employeeMonthlyTrends: 'employee-monthly-performance-trend/',
  unitMonthlyTrends: 'unit-monthly-performance-trend/',
  perKPITrends: 'per-kpi-trend/',

  myKPIS: 'my-kpis',
  managerKPIS: 'my-unit-kpis',
  workflows: 'workflows',
  createWorkflow: 'create-workflow',
  updateWorkflow: 'update-workflow',
  deleteWorkflow: 'delete-workflow',

  /**Eyuel Endpoints */
  permissi: 'permissions',
  role: 'roles',
  fiscal_years: 'fiscal-years',
  planning_periods: 'create-planning-period',
  frequency_period_values: 'create-frequency-definition-period',
  get_frequency_definition: 'get-frequency-definition-period',
  evaluation_periods: 'create-evaluation-period',
  get_evaluation_periods: 'get-evaluation-period',
  sendEvaluation: 'confirm-evaluation/',
  getEvaluationApprovalTasks: 'get-evaluation-approval-detail/',
  getEvaluationApprovalRemark: 'get-evaluation-remarks-by-workflow/',
  getMyEvaluation: 'get-my-evaluation-approval-detail',
  evaluationWorkflowAction: 'change-evaluation-workflow-status',
  evaluationTaskApproval: 'manager-evaluation-workflow-action/',
  eodfetch: 'end-of-day-activities',
  getCount: 'get-counts',
  getHrCount: 'get-hr-counts',
  getPendingTaskCount: 'get-sidenav-counts',

  getEmployeesInDep: 'my-child-units-employee-count',
  getRankings: 'rank-performance',
  unitKpiPerformance: 'show-performance-chart',
  unitEmployeeEndpoint: 'get-unit-employees-with-performance/',
  getUnitEmployees: 'get-unit-employees/',
  // getUnitPlans: 'get-unit-plan/',
  getUnitPlans: 'get-unit-plans/',
  submitUnitPlan: 'verify-unit-plan/',
  performanceratingscale: 'performance-rating-scales',
  jobposition: 'job-positions',
  allJobPosition: 'get-job-positions',
  getSinglePeriods: 'get-single-periods',
  planningPeriod: 'create-planning-period',
  monitoringPeriod: 'create-monitoring-period',
  revisionPeriod: 'create-revision-period',
  perspectiveTypes: 'perspective-types',
  evaluationTypes: 'evaluation-types',
  kpiExcell: 'kpis/upload',
  UnitExcell: 'units/upload',
  JobExcell: 'job-positions/upload',

  myNotification: 'my-notifications',
  readNotification: 'read-notification/',
  readAllNotification: 'read-all-notifications',

  exportPlans: 'export-planning',
  exportMonitoring: 'export-monitoring',
  exportPerformance: 'export-performance',

  exportMyPlans: 'export-my-planning',
  exportMyMonitoring: 'export-my-monitoring',
  exportMyPerformance: 'export-my-performance',

  unitPlans: 'department-plan-status',
  employeePlans: 'employees-plan-status',
  planningByStatus: 'plan-status-counts',
  exportPlanningStatus: 'export-employee-plan-status',
  exportUnitPlanningStatus: 'export-department-plan-status',

  exportManagersTaskStatus: 'export-managers-task-status',
  exportEmployeesTaskStatus: 'export-employees-task-status',
  exportManagersHasNoStatus: 'export-managers-has-no-task-status',
  exportEmployeesHasNoStatus: 'export-employees-has-no-task-status',

  taskStatusCount: 'task-status-counts',
  employeeTaskList: 'employees-task-status',
  managerTaskList: 'managers-task-status',
  employeeNoTaskList: 'employees-has-no-task-status',
  managerNoTaskList: 'managers-has-no-task-status',
  findEmployees: 'find-employees',
  deleteEmployeesPlan: 'delete-employee-plans',
  childEmployees: 'get-my-child-employees',
  submitClonedEmployeePlan: 'clone-employee-plan',
  childDepartments: 'get-my-child-departments',
  submitClonedUnitPlan: 'clone-unit-plan',
  risk: 'update-risk',
  feedBack: 'feedbacks',
  clonWeeklyTask: 'clone-weekly-task',
  myFeedBack: 'my-feedbacks',
  monitoringStatusCount: 'monitoring-status-counts',
  employeeMonitoringList: 'employees-monitoring-status',
  unitMonitoringList: 'department-monitoring-status',
  delatedLogs: 'delete-logs',
};
export default Backend;
